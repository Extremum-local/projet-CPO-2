package SpeedClick;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

import java.util.Timer;
import java.util.TimerTask;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author vedie
 */
public class fenetreDeJeu extends javax.swing.JFrame {

    Grille GrilleJeu = new Grille();
    Joueur JoueurCourant;
    Bouton BoutonJeu[][];
    boolean boutonAllumé;
    static int second = 0;
    static int millisecond = 0;
    int Compteur = 0;
    Timer chronometre = new Timer();
    int meilleursc = 0;
    /**
     * Creates new form fenetreDeJeu
     */
    public fenetreDeJeu() {

        initComponents();
        panneau_grille.setVisible(false);
        infopartie.setVisible(false);
        info_joueur.setVisible(false); //on rend invisible certains panels tant que le joueur ne click pas sur démarrer.
        scoreJoueur.setText("" + Compteur); //on met un compteur à coté du score du joueur (emplacement scoreJoueur)
        meilleur_score.setText("" + meilleursc);
        
        for (int i = 3; i >= 0; i--) {
            for (int j = 0; j <4; j++) {

                CelluleGraphique cellGraph = new CelluleGraphique(GrilleJeu.BoutonJeu[i][j]);
                panneau_grille.add(cellGraph);
                cellGraph.addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        Bouton B = cellGraph.BoutonAssocie;
                        if (B.BoutonAllumé() == true) {
                            Eteindre(B);
                            Random r = new Random();
                            int ligne_B = r.nextInt(4);
                            int colonne_B = r.nextInt(4);
                            GrilleJeu.AllumerBouton(ligne_B, colonne_B);
                            panneau_grille.repaint();
                        } else {

                        }
                    }
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panneau_grille = new javax.swing.JPanel();
        infopartie = new javax.swing.JPanel();
        informations = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        scoreJoueur = new javax.swing.JLabel();
        chronoJoueur = new javax.swing.JLabel();
        lancement5 = new javax.swing.JButton();
        lancement15 = new javax.swing.JButton();
        lancement30 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        info_joueur = new javax.swing.JPanel();
        meilleur = new javax.swing.JLabel();
        nomJoueur = new javax.swing.JLabel();
        pseudoJoueur = new javax.swing.JLabel();
        meilleur_score = new javax.swing.JLabel();
        informations1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Début = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Pseudo = new javax.swing.JTextField();
        lancerPartie = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 51));
        setSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panneau_grille.setBackground(new java.awt.Color(204, 204, 204));
        panneau_grille.setPreferredSize(new java.awt.Dimension(100, 100));
        panneau_grille.setLayout(new java.awt.GridLayout(4, 4));
        getContentPane().add(panneau_grille, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 400));

        infopartie.setBackground(new java.awt.Color(153, 153, 255));
        infopartie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        informations.setFont(new java.awt.Font("Lucida Handwriting", 1, 12)); // NOI18N
        informations.setText("Informations partie :");
        infopartie.add(informations, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 160, 40));

        jLabel2.setFont(new java.awt.Font("Lucida Calligraphy", 1, 11)); // NOI18N
        jLabel2.setText("Lancement :");
        infopartie.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 90, 20));

        jLabel3.setFont(new java.awt.Font("Lucida Calligraphy", 1, 11)); // NOI18N
        jLabel3.setText("Score :");
        infopartie.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        scoreJoueur.setText("scoreJoueur");
        infopartie.add(scoreJoueur, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, -1));
        infopartie.add(chronoJoueur, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 40, -1));

        lancement5.setFont(new java.awt.Font("Lucida Calligraphy", 1, 10)); // NOI18N
        lancement5.setText("5 secondes");
        lancement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lancement5ActionPerformed(evt);
            }
        });
        infopartie.add(lancement5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 100, 25));

        lancement15.setFont(new java.awt.Font("Lucida Calligraphy", 1, 10)); // NOI18N
        lancement15.setText("15 secondes");
        lancement15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lancement15ActionPerformed(evt);
            }
        });
        infopartie.add(lancement15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 100, 25));

        lancement30.setFont(new java.awt.Font("Lucida Calligraphy", 1, 10)); // NOI18N
        lancement30.setText("30 secondes");
        lancement30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lancement30ActionPerformed(evt);
            }
        });
        infopartie.add(lancement30, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 100, 25));

        jLabel8.setFont(new java.awt.Font("Lucida Calligraphy", 1, 11)); // NOI18N
        jLabel8.setText("Chronomètre :");
        infopartie.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        getContentPane().add(infopartie, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 170, 240, 240));

        info_joueur.setBackground(new java.awt.Color(153, 153, 255));
        info_joueur.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        info_joueur.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        meilleur.setFont(new java.awt.Font("Lucida Calligraphy", 1, 11)); // NOI18N
        meilleur.setText("Meilleur score :");
        info_joueur.add(meilleur, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 30));

        nomJoueur.setFont(new java.awt.Font("Lucida Calligraphy", 1, 11)); // NOI18N
        nomJoueur.setText("Nom du joueur :");
        info_joueur.add(nomJoueur, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 30));

        pseudoJoueur.setText("pseudoJoueur");
        info_joueur.add(pseudoJoueur, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, 30));

        meilleur_score.setText("meilleur");
        info_joueur.add(meilleur_score, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 50, 30));

        informations1.setFont(new java.awt.Font("Lucida Handwriting", 1, 12)); // NOI18N
        informations1.setText("Informations joueur :");
        info_joueur.add(informations1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 160, 40));

        jLabel9.setText("clic par minute");
        info_joueur.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, 30));

        getContentPane().add(info_joueur, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 240, 135));

        Début.setBackground(new java.awt.Color(204, 204, 255));
        Début.setForeground(new java.awt.Color(204, 204, 255));
        Début.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jLabel4.setText("Votre pseudo :");
        Début.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 130, 50));

        jLabel5.setFont(new java.awt.Font("Lucida Console", 1, 36)); // NOI18N
        jLabel5.setText("SPEED CLICK");
        Début.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 270, 60));

        Pseudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PseudoActionPerformed(evt);
            }
        });
        Début.add(Pseudo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 150, 40));

        lancerPartie.setFont(new java.awt.Font("Lucida Calligraphy", 1, 18)); // NOI18N
        lancerPartie.setText("Démarrer");
        lancerPartie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lancerPartieActionPerformed(evt);
            }
        });
        Début.add(lancerPartie, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 190, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel1.setText("Mayeul Kaeppelin");
        Début.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 110, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel6.setText("Manon Védie");
        Début.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 70, 20));

        jLabel7.setFont(new java.awt.Font("Lucida Calligraphy", 0, 11)); // NOI18N
        jLabel7.setText("Clique sur les boutons rouges le plus rapidement possible...");
        Début.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        Début.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, -1, 330));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        Début.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 330));

        getContentPane().add(Début, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 530, 330));

        setBounds(0, 0, 789, 491);
    }// </editor-fold>//GEN-END:initComponents

    private void PseudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PseudoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PseudoActionPerformed

    private void lancerPartieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lancerPartieActionPerformed
        // TODO add your handling code here:
        panneau_grille.setVisible(true); //On rend visible les panels de jeu
        infopartie.setVisible(true);
        info_joueur.setVisible(true);
        Début.setVisible(false); //on met invisible la page d'accueil
        
        String nom_J = Pseudo.getText();
        Joueur J = new Joueur(nom_J);
        JoueurCourant = J;
        pseudoJoueur.setText(nom_J);
        
    }//GEN-LAST:event_lancerPartieActionPerformed

    private void lancement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lancement5ActionPerformed
        // TODO add your handling code here:
        Compteur=0; //on remet le compteur de score à 0 à chaque début de partie
        scoreJoueur.setText("" + Compteur); //on l'affiche
        
        initialiserPartie(); //faire une diff entre initialiser et débuter partie
        boolean chrono = false;
        chrono = chronometre5();
        
    }//GEN-LAST:event_lancement5ActionPerformed

    private void lancement15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lancement15ActionPerformed
        Compteur=0; //on remet le compteur de score à 0 à chaque début de partie
        scoreJoueur.setText("" + Compteur); //on l'affiche
        
        initialiserPartie();
        boolean chrono = false;
        chrono = chronometre15();
    }//GEN-LAST:event_lancement15ActionPerformed

    private void lancement30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lancement30ActionPerformed
        Compteur=0; //on remet le compteur de score à 0 à chaque début de partie
        scoreJoueur.setText("" + Compteur); //on l'affiche
        
        initialiserPartie();
        boolean chrono = false;
        chrono = chronometre30();
    }//GEN-LAST:event_lancement30ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new fenetreDeJeu().setVisible(true);
            }
        });
    }

    public void initialiserPartie() {

        Random r = new Random();
        int lig1 = r.nextInt(4); //on choisit un nb entre 1 et 4 pour définir le bouton qui va s'allumer dès le début
        int col1 = r.nextInt(4);
        GrilleJeu.AllumerBouton(lig1, col1); //des le début, on aura un de nos boutons allumé.
        panneau_grille.repaint();// permet de rafraichir l'écran afin de pouvoir jouer normalement. si l'on ne l'utilise pas il faut passer sur les cases a la souris afin de voir les jetons s'afficher

    }
   
    
    public void Grille() {
        BoutonJeu = new Bouton[4][4]; //on crée notre première grille de jeu
        for (int i = 0; i < 4; i++) { // Bouton[0][0] en bas à gauche
            for (int j = 0; j < 4; j++) {
                BoutonJeu[i][j] = new Bouton(); // dimensions 4x4
            }
        }
    }

    public void eteindreGrille() { //on eteint tous les boutons de la grille
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 3; j++) {
                BoutonJeu[i][j].vide = null;
                BoutonJeu[i][j].boutonAllumé = false;               
            }
        }
    }
    
    public void MeilleurScore5() { // faire les mots par minute !!!
        String meilleursc_str=meilleur_score.getText(); //on récupère le texte stocké dans 'meilleur_score'
        String sc_str = scoreJoueur.getText(); //pareil avec scoreJoueur
        meilleursc = Integer.parseInt(meilleursc_str); //on transforme le string qu'on vient de récupérer en integer 
        int sc = Integer.parseInt(sc_str);
        int vraiScore=(sc/5)*60; //calcule le score par minute

        if (meilleursc <= vraiScore) { //on peut donc après comparer nos deux integers.
            meilleursc=vraiScore; //si le nouveau score est meilleur que l'ancien meilleur score, il prend sa place
        }
                meilleur_score.setText(""+meilleursc); //on change l'affichage, on voit le meilleur score du joueur
    }
    
    public void MeilleurScore15() { // faire les mots par minute !!!
        String meilleursc_str=meilleur_score.getText(); //on récupère le texte stocké dans 'meilleur_score'
        String sc_str = scoreJoueur.getText(); //pareil avec scoreJoueur
        meilleursc = Integer.parseInt(meilleursc_str); //on transforme le string qu'on vient de récupérer en integer 
        int sc = Integer.parseInt(sc_str);
        int vraiScore=sc*4; //calcule le score par minute

        if (meilleursc <= vraiScore) { //on peut donc après comparer nos deux integers.
            meilleursc=vraiScore; //si le nouveau score est meilleur que l'ancien meilleur score, il prend sa place
        }
                meilleur_score.setText(""+meilleursc); //on change l'affichage, on voit le meilleur score du joueur
    }
    
    public void MeilleurScore30() { // faire les mots par minute !!!
        String meilleursc_str=meilleur_score.getText(); //on récupère le texte stocké dans 'meilleur_score'
        String sc_str = scoreJoueur.getText(); //pareil avec scoreJoueur
        meilleursc = Integer.parseInt(meilleursc_str); //on transforme le string qu'on vient de récupérer en integer 
        int sc = Integer.parseInt(sc_str);
        int vraiScore=sc*2; //calcule le score par minute

        if (meilleursc <= vraiScore) { //on peut donc après comparer nos deux integers.
            meilleursc=vraiScore; //si le nouveau score est meilleur que l'ancien meilleur score, il prend sa place
        }
                meilleur_score.setText(""+meilleursc); //on change l'affichage, on voit le meilleur score du joueur
    }

    public void FinPartie5() {
        for (int i = 3; i >= 0; i--) {
            for (int j = 0; j < 4; j++) { 
                GrilleJeu.eteindreGrille();
                MeilleurScore5();
                panneau_grille.repaint();

            }
        }
    }
    public void FinPartie15() {
        for (int i = 3; i >= 0; i--) {
            for (int j = 0; j < 4; j++) { 
                GrilleJeu.eteindreGrille();
                MeilleurScore15();
                panneau_grille.repaint();

            }
        }
    }
    public void FinPartie30() {
        for (int i = 3; i >= 0; i--) {
            for (int j = 0; j < 4; j++) { 
                GrilleJeu.eteindreGrille();
                MeilleurScore30();
                panneau_grille.repaint();

            }
        }
    }
        
    

    public boolean chronometre5() {
        Timer chrono = new Timer();
        chrono.schedule(new TimerTask() {
            int time = 5;

            @Override
            public void run() {
                chronoJoueur.setText("" + time);
                if (time == 0) {
                    FinPartie5();
                    cancel();// stoppe le chrono au bout de 5 s
                }
                time--;
            }
        }, 1000, 1000);
        return true;
    }

    public boolean chronometre15() {
        Timer chrono = new Timer();
        chrono.schedule(new TimerTask() {
            int time = 15;

            @Override
            public void run() {
                chronoJoueur.setText("" + time);
                if (time == 0) {
                    FinPartie15();
                    cancel();// stoppe le chrono au bout de 15 s
                }
                time--;
            }
        }, 1000, 1000);
        return true;
    }
    
    public boolean chronometre30() {
        Timer chrono = new Timer();
        chrono.schedule(new TimerTask() {
            int time = 30;

            @Override
            public void run() {
                chronoJoueur.setText("" + time);
                if (time == 0) {
                    FinPartie30();
                    cancel();// stoppe le chrono au bout de 30 s
                }
                time--;
            }
        }, 1000, 1000);
        return true;
    }
    
    public boolean Allumé(Bouton boutonCourant) {
        if (boutonCourant.BoutonAllumé() == true) {
            return false;
        } else {
            boutonAllumé = true; //on allume le bouton s'il ne l'est pas déjà
            return true;
        }

    }

    public boolean Eteindre(Bouton boutonCourant) {
        if (boutonCourant.BoutonAllumé() == false) {
            return true;
        } else {
            boutonCourant.boutonAllumé = false; //on eteint le bouton s'il ne l'est pas déjà
            Compteur++;
            scoreJoueur.setText("" + Compteur);
            panneau_grille.repaint();
            return false;
        }

    }

    public boolean BoutonAllumé() { //on demande si le bouton est déjà allumé ou non
        return boutonAllumé;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Début;
    private javax.swing.JTextField Pseudo;
    private javax.swing.JLabel chronoJoueur;
    private javax.swing.JPanel info_joueur;
    private javax.swing.JPanel infopartie;
    private javax.swing.JLabel informations;
    private javax.swing.JLabel informations1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton lancement15;
    private javax.swing.JButton lancement30;
    private javax.swing.JButton lancement5;
    private javax.swing.JButton lancerPartie;
    private javax.swing.JLabel meilleur;
    private javax.swing.JLabel meilleur_score;
    private javax.swing.JLabel nomJoueur;
    private javax.swing.JPanel panneau_grille;
    private javax.swing.JLabel pseudoJoueur;
    private javax.swing.JLabel scoreJoueur;
    // End of variables declaration//GEN-END:variables
}
